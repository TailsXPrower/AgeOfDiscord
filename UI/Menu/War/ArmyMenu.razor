@using Sandbox;
@using Sandbox.Configs
@using Sandbox.GameData
@using Sandbox.Modes
@using Sandbox.UI;
@inherits Panel

@namespace AgeOfDiscord.UI.Menu
@attribute [StyleSheet]

<root class="window left" style="width: 20vw; min-height: 22vh; max-height: 62vh; margin-left: 10px; z-index: 1">
	<div class="vertical-layout" style="gap: 0;">
		<div class="horizontal-layout" style="margin: 5px;">
			<TextEntry class="box center-child" Value:bind="@Army.Name" MaxLength="@( 28 )" style="width: 100%; height: 45px; font-size: 20px; text-align: center"></TextEntry>
			<button class="center-child" style="width: 45px; height: 45px; flex-shrink: 0; font-size: 20px;" onclick="@Close">
				❌
			</button>
		</div>
		<div class="horizontal-layout" style="margin: 5px;">
			<div class="vertical-layout" style="width: 100%;">
				@if ( Army != null )
				{
					<div class="box" style="width: 100%;">
						<span class="info">Located in: @Army.Province.Name</span>
					</div>
					<div class="box" style="width: 100%;">
						<span class="info">Health: @Army.Health</span>
					</div>

					@if ( Army.CurrentBattle != null )
					{
						<div class="box" style="width: 100%;">
							<span class="info">Current battle: @Army.CurrentBattle.Name</span>
						</div>
					}

					@if ( Army.Movement.IsMoving )
					{
						<div class="box" style="width: 100%;">
							<span class="info">Moving to: @Army.Movement.DestinationProvince.Name</span>
						</div>

						<div class="box" style="width: 100%;">
							<span class="info">Estimated arrival: @Army.Movement.GetEstimatedArrival(Scene)</span>
						</div>
					}

					<div class="box vertical-layout" style="padding: 10px; gap: 2px;">
						<a style="font-size: 18px;">Units: @Army.Units.Count/@Army.GetMaxUnits()</a>

						@{
							var units = GetUnits();
							@foreach (var unit in units)
							{
								if ( units[^1] != unit )
								{
									<a style="font-size: 18px;">@unit</a>
								}
								else
								{
									<a style="font-size: 18px;">@unit</a>
								}
							}
						}
					</div>
				}
			</div>
			@if ( Army != null )
			{
				<button class="center-child" style="width: 45px; height: 45px; flex-shrink: 0; font-size: 20px;" onclick="@DeleteArmy">
					<img style="margin: 5px 0 5px 5px; width: 32px; height: 32px;" alt="money" src="/ui/icons/delete.png">
				</button>
			}
		</div>
	</div>
</root>

@code
{
	public Army Army;
	
	public List<string> GetUnits()
	{
		var unitCount =  new Dictionary<string, KeyValuePair<int, KeyValuePair<int, int>>>();;
		foreach (var unit in Army.Units.Where(unit => !unitCount.TryAdd(unit.Config.Name, new KeyValuePair<int, KeyValuePair<int, int>>( 1, new KeyValuePair<int, int>(unit.Health, 100)))))
		{
			var pair = unitCount[unit.Config.Name];
			var count = pair.Key;
			count++;
			
			var (currentHealth, maxHealth) = pair.Value;
			currentHealth += unit.Health;
			maxHealth += 100;

			unitCount[unit.Config.Name] = new KeyValuePair<int, KeyValuePair<int, int>>( count, new KeyValuePair<int, int>( currentHealth, maxHealth ) );
		}

		return unitCount.Select( pair => $"- {pair.Value.Key}x {pair.Key} | {pair.Value.Value.Key}/{pair.Value.Value.Value}" ).ToList();
	}
	
	public void DeleteArmy()
	{
		var gameUi = Scene.Components.GetInDescendants<GameUI>();
		var confirmation = new Confirmation()
		{
			OnAgree = () =>
			{
				UnitMode.SelectedArmy = null;
				Army.Delete();
				Delete();
			},
			Message = "Are you sure you want to delete the army? It will return all manpower used and 50% of the ore used"
		};
		gameUi.Panel.AddChild( confirmation );
	}
	
	public void Close()
	{
		Sound.Play( "click" ).Pitch = 0.8f;
		Delete();
	}
	
	private string GetProvinceName()
	{
		return Army != null ? Army.Name : "No selected army!";
	}
	
	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine( Army, Army?.Province, Army?.Country, Army?.Health, Army?.Units.Count, Army?.Movement.IsMoving, Army?.Movement.DestinationProvince, UnitMode.SelectedArmy );
}
